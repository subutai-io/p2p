// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dht.proto

/*
Package ptp is a generated protocol buffer package.

It is generated from these files:
	dht.proto

It has these top-level messages:
	DHTPacket
*/
package ptp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DHTPacketType int32

const (
	DHTPacketType_Connect       DHTPacketType = 0
	DHTPacketType_Forward       DHTPacketType = 1
	DHTPacketType_Find          DHTPacketType = 2
	DHTPacketType_Node          DHTPacketType = 3
	DHTPacketType_Ping          DHTPacketType = 4
	DHTPacketType_RegisterProxy DHTPacketType = 5
	DHTPacketType_RequestProxy  DHTPacketType = 6
	DHTPacketType_ReportProxy   DHTPacketType = 7
	DHTPacketType_BadProxy      DHTPacketType = 8
	DHTPacketType_Proxy         DHTPacketType = 9
	DHTPacketType_Notify        DHTPacketType = 10
	DHTPacketType_ReportLoad    DHTPacketType = 11
	DHTPacketType_Stop          DHTPacketType = 12
	DHTPacketType_Unknown       DHTPacketType = 13
	DHTPacketType_DHCP          DHTPacketType = 14
	DHTPacketType_Error         DHTPacketType = 15
	DHTPacketType_Unsupported   DHTPacketType = 16
	DHTPacketType_State         DHTPacketType = 17
)

var DHTPacketType_name = map[int32]string{
	0:  "Connect",
	1:  "Forward",
	2:  "Find",
	3:  "Node",
	4:  "Ping",
	5:  "RegisterProxy",
	6:  "RequestProxy",
	7:  "ReportProxy",
	8:  "BadProxy",
	9:  "Proxy",
	10: "Notify",
	11: "ReportLoad",
	12: "Stop",
	13: "Unknown",
	14: "DHCP",
	15: "Error",
	16: "Unsupported",
	17: "State",
}
var DHTPacketType_value = map[string]int32{
	"Connect":       0,
	"Forward":       1,
	"Find":          2,
	"Node":          3,
	"Ping":          4,
	"RegisterProxy": 5,
	"RequestProxy":  6,
	"ReportProxy":   7,
	"BadProxy":      8,
	"Proxy":         9,
	"Notify":        10,
	"ReportLoad":    11,
	"Stop":          12,
	"Unknown":       13,
	"DHCP":          14,
	"Error":         15,
	"Unsupported":   16,
	"State":         17,
}

func (x DHTPacketType) String() string {
	return proto.EnumName(DHTPacketType_name, int32(x))
}
func (DHTPacketType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DHTPacket struct {
	Type      DHTPacketType `protobuf:"varint,1,opt,name=type,enum=main.DHTPacketType" json:"type,omitempty"`
	Id        string        `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Infohash  string        `protobuf:"bytes,3,opt,name=infohash" json:"infohash,omitempty"`
	Data      string        `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	Query     string        `protobuf:"bytes,5,opt,name=query" json:"query,omitempty"`
	Arguments []string      `protobuf:"bytes,6,rep,name=arguments" json:"arguments,omitempty"`
	Proxies   []string      `protobuf:"bytes,7,rep,name=proxies" json:"proxies,omitempty"`
	Extra     string        `protobuf:"bytes,8,opt,name=extra" json:"extra,omitempty"`
}

func (m *DHTPacket) Reset()                    { *m = DHTPacket{} }
func (m *DHTPacket) String() string            { return proto.CompactTextString(m) }
func (*DHTPacket) ProtoMessage()               {}
func (*DHTPacket) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DHTPacket) GetType() DHTPacketType {
	if m != nil {
		return m.Type
	}
	return DHTPacketType_Connect
}

func (m *DHTPacket) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DHTPacket) GetInfohash() string {
	if m != nil {
		return m.Infohash
	}
	return ""
}

func (m *DHTPacket) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *DHTPacket) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *DHTPacket) GetArguments() []string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *DHTPacket) GetProxies() []string {
	if m != nil {
		return m.Proxies
	}
	return nil
}

func (m *DHTPacket) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func init() {
	proto.RegisterType((*DHTPacket)(nil), "main.DHTPacket")
	proto.RegisterEnum("main.DHTPacketType", DHTPacketType_name, DHTPacketType_value)
}

func init() { proto.RegisterFile("dht.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xcd, 0xae, 0xda, 0x30,
	0x14, 0x84, 0x1b, 0xc8, 0xef, 0x21, 0x81, 0x83, 0xbb, 0xf1, 0x92, 0x76, 0x85, 0xba, 0x60, 0xd1,
	0xbe, 0x41, 0xa1, 0x88, 0x45, 0x85, 0x22, 0x7e, 0x1e, 0xc0, 0xc5, 0x07, 0xb0, 0x10, 0x76, 0x70,
	0x1c, 0x41, 0xde, 0xa5, 0x4f, 0xda, 0x55, 0xe5, 0xe4, 0xea, 0x4a, 0x77, 0x37, 0xf3, 0x8d, 0xc7,
	0x63, 0xc9, 0x90, 0xc9, 0xab, 0x5b, 0x54, 0xd6, 0x38, 0xc3, 0xc2, 0xbb, 0x50, 0xfa, 0xeb, 0xdf,
	0x00, 0xb2, 0xd5, 0xe6, 0x50, 0x8a, 0xd3, 0x8d, 0x1c, 0xfb, 0x02, 0xa1, 0x6b, 0x2b, 0xe2, 0xc1,
	0x2c, 0x98, 0x8f, 0xbf, 0x7f, 0x5e, 0xf8, 0x23, 0x8b, 0xf7, 0xf8, 0xd0, 0x56, 0xc4, 0x00, 0x06,
	0x4a, 0xf2, 0xc1, 0x2c, 0x98, 0x67, 0x0c, 0x21, 0x55, 0xfa, 0x6c, 0xae, 0xa2, 0xbe, 0xf2, 0x61,
	0x47, 0x72, 0x08, 0xa5, 0x70, 0x82, 0x87, 0x9d, 0x2b, 0x20, 0x7a, 0x34, 0x64, 0x5b, 0x1e, 0x75,
	0x76, 0x0a, 0x99, 0xb0, 0x97, 0xe6, 0x4e, 0xda, 0xd5, 0x3c, 0x9e, 0x0d, 0xe7, 0x19, 0x9b, 0x40,
	0x52, 0x59, 0xf3, 0x52, 0x54, 0xf3, 0xa4, 0x03, 0x05, 0x44, 0xf4, 0x72, 0x56, 0xf0, 0xd4, 0x57,
	0xbe, 0xfd, 0x0b, 0xa0, 0xf8, 0xb8, 0x3f, 0x82, 0x64, 0x69, 0xb4, 0xa6, 0x93, 0xc3, 0x4f, 0xde,
	0xac, 0x8d, 0x7d, 0x0a, 0x2b, 0x31, 0x60, 0x29, 0x84, 0x6b, 0xa5, 0x25, 0x0e, 0xbc, 0xda, 0x1a,
	0x49, 0x38, 0xf4, 0xaa, 0x54, 0xfa, 0x82, 0x21, 0x9b, 0x42, 0xb1, 0xa3, 0x8b, 0xaa, 0x1d, 0xd9,
	0xd2, 0x9a, 0x57, 0x8b, 0x11, 0x43, 0xc8, 0x77, 0xf4, 0x68, 0xa8, 0x76, 0x3d, 0x89, 0xd9, 0x04,
	0x46, 0x3b, 0xaa, 0x8c, 0x7d, 0x03, 0x09, 0xcb, 0x21, 0xfd, 0x29, 0x64, 0xef, 0x52, 0x96, 0x41,
	0xd4, 0xcb, 0x8c, 0x01, 0xc4, 0x5b, 0xe3, 0xd4, 0xb9, 0x45, 0x60, 0x63, 0x80, 0xbe, 0xf5, 0xdb,
	0x08, 0x89, 0x23, 0x3f, 0xba, 0x77, 0xa6, 0xc2, 0xdc, 0xbf, 0xef, 0xa8, 0x6f, 0xda, 0x3c, 0x35,
	0x16, 0x1e, 0xaf, 0x36, 0xcb, 0x12, 0xc7, 0xfe, 0x9e, 0x5f, 0xd6, 0x1a, 0x8b, 0x13, 0xbf, 0x78,
	0xd4, 0x75, 0x53, 0xf9, 0x3a, 0x49, 0x44, 0x9f, 0xed, 0x9d, 0x70, 0x84, 0xd3, 0x3f, 0x71, 0xf7,
	0x51, 0x3f, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x2c, 0xa3, 0x02, 0xb5, 0x01, 0x00, 0x00,
}
