#!/bin/bash

showhelp()
{
cat << ENDHELP

usage: configure [options]
Configure p2p

Options:
    --scheme=<build_scheme>
        Builds p2p with specified build scheme. Supported schemes is: master, dev, branch. Default: master

    --dht=<url>
        Default DHT url

    --branch=<branch_ name>
        Specify a branch name. By default configure script will try to determine branch name
        using command line. Setting this option will modify version output and target DHT

    --help
    Display this help screen
ENDHELP
}

upx_bin=upx
gopath=
upx_go=$GOPATH/bin/goupx
name_prefix=p2p
scheme="master"
branch=`git rev-parse --abbrev-ref HEAD`
dht=""

while [ $# -ge 1 ]; do
    case "$1" in
        --scheme=*)
            scheme="`echo ${1} | awk '{print substr($0,10)}'`" ;;
        --branch=*)
            branch="`echo ${1} | awk '{print substr($0,10)}'`" ;;
        --dht=*)
            dht="`echo ${1} | awk '{print substr($0,7)}'`" ;;
        --help)
            showhelp
            exit 0
            ;;
        *)
            echo "ERROR: Unknown argument: $1"
            showhelp
            exit 1
            ;;
    esac

    shift
done

echo "Preparing $scheme build"

name_base="$name_prefix"
if [ "$branch" != "HEAD" ]; then
    name_base=$name_prefix-$branch
fi

echo "Building $name_base"

if [ "$dht" == "" ]; then
    echo "Determining DHT address"
    if [ "$branch" == "HEAD" ]; then
        dht="mdht.subut.ai:6881"
    elif [ "$branch" == "master" ]; then
        dht="54.93.172.70:6881"
    elif [ "$branch" == "sysnet" ]; then
        dht="18.196.2.161:6881"
    else
        dht="18.195.169.215:6881"
    fi
    echo "DHT is set to $dht"
else
    echo "DHT is set to $dht"
fi

log_level="INFO"
if [ "$branch" == "HEAD" ]; then
    log_level="WARNING"
elif [ "$branch" == "master" ]; then
    log_level="INFO"
elif [ "$branch" == "dev" ]; then
    log_level="DEBUG"
elif [ "$branch" == "sysnet" ]; then
    log_level="TRACE"
fi

echo "Checking go environment"
if [ "$GOPATH" == "" ]; then
    echo "GOPATH is not set. Setting to /tmp/go-path-tmp directory"
	gopath=/tmp/go-path-tmp
fi

echo "Downloading necessary packages"
if [ ! -z $gopath ]; then
    export GOPATH=$HOME
    export GOBIN=$HOME/go-bin
fi

go get

# generating config.make file
echo "# config.make generated by configure script" > config.make
echo "NAME_BASE = $name_base" >> config.make
echo "NAME_PREFIX = $name_prefix" >> config.make
echo "DHT_ENDPOINTS = $dht" >> config.make
echo "LOG_LEVEL = $log_level" >> config.make
if [ "$dht" != "" ]; then
    echo "DHT = $dht" >> config.make
fi
if [ "$branch" != "HEAD" ]; then
    echo "BRANCH_POSTFIX = -$branch" >> config.make
fi
#
echo "export NAME_BASE" >> config.make
echo "export NAME_PREFIX" >> config.make
echo "export DHT_ENDPOINTS" >> config.make
echo "export LOG_LEVEL" >> config.make
if [ ! -z "$gopath" ]; then
echo "GOPATH = $HOME" >> config.make
echo "export GOPATH" >> config.make
fi
if [ "$branch" != "HEAD" ]; then
    echo "export BRANCH_POSTFIX" >> config.make
fi
